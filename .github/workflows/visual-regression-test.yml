name: visual regression test

on:
  - push
  - pull_request_target
  - workflow_dispatch

jobs:
  check_paths:
    runs-on: ubuntu-latest
    # ignoring if triggered by bot
    # need specified label if Pull-request from fork
    if: >
      (github.actor != 'dependabot[bot]' && github.actor != 'renovate[bot]') && (
        github.event_name == 'push' ||
        github.event_name == 'workflow_dispatch' || (
          github.event_name == 'pull_request' && (
            github.event.pull_request.head.repo.full_name == github.repository || (
              github.event.pull_request.head.repo.full_name != github.repository &&
              github.event.pull_request.action == 'labeled' &&
              contains(github.event.pull_request.labels.*.name, 'allow execute workflow')
            )
          )
        )
      )
    outputs:
      ui: ${{ steps.filter.outputs.ui }}
    steps:
      - if: github.event_name == 'pull_request'
        uses: actions/checkout@v3
        with:
          ref: 'refs/pull/${{ github.event.number }}/merge'
      - if: github.event_name != 'pull_request'
        uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            ui:
              - 'packages/spindle-ui/**'
  visual_regression_test:
    runs-on: ubuntu-latest
    needs: check_paths
    if: ${{ needs.check_paths.outputs.ui == 'true' }}
    steps:
      - run: sudo apt-get --yes update
      - run: sudo apt-get --yes install fonts-noto
      - if: github.event_name == 'pull_request'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: 'refs/pull/${{ github.event.number }}/merge'
      - if: github.event_name != 'pull_request'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: restore lerna
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ github.event_name }}-${{ hashFiles('**/yarn.lock') }}-v2
      - run: yarn install --frozen-lockfile
      - run: npx lerna bootstrap -- --frozen-lockfile
      - run: |
          yarn lerna run --scope @openameba/spindle-hooks build
          yarn lerna run --scope @openameba/spindle-tokens build
          yarn lerna run --scope @openameba/spindle-ui storybook:build
      - run: |
          npx lerna add --scope @openameba/spindle-ui --dev reg-keygen-git-hash-plugin
          npx lerna add --scope @openameba/spindle-ui --dev reg-notify-github-plugin
          npx lerna add --scope @openameba/spindle-ui --dev reg-publish-gcs-plugin
      - name: capture stories
        run: >
          npx storycap
          --outDir packages/spindle-ui/.reg-suit/actual_images/
          --serverCmd 'npx serve -p 5000 packages/spindle-ui/public'
          http://localhost:5000
      - run: git checkout ${{ github.head_ref || github.ref_name }}
      - run: |
          printf -- '%s' "$GOOGLE_APPLICATION_CREDENTIALS_JSON" | base64 --decode > "${PWD}/storage-key.json"
          export GOOGLE_APPLICATION_CREDENTIALS="${PWD}/storage-key.json"
          yarn lerna run --scope @openameba/spindle-ui test:regression
        env:
          GCS_BUCKET_NAME_REG_SUIT: ${{ secrets.GCS_BUCKET_NAME_REG_SUIT }}
          GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}
          REG_SUIT_NOTIFY_CLIENT_ID: ${{ secrets.REG_SUIT_NOTIFY_CLIENT_ID }}
