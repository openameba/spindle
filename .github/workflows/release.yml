name: releaseing

on:
  push:
    branches:
      - release/major
      - release/minor
      - release/patch
      - release/premajor
      - release/preminor
      - release/prepatch
      - release/prerelease

jobs:
  releaseing:
    name: releaseing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      # Bootstrap lerna for building app before publishing
      - name: restore lerna
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-v2
      - run: yarn install --frozen-lockfile
      - run: npx lerna bootstrap -- --frozen-lockfile
      - run: |
          yarn lerna run --scope @openameba/spindle-hooks build
          yarn lerna run --scope @openameba/spindle-tokens build
      - name: Set git user
        run: |
          git config --global user.email "<>"
          git config --global user.name "openameba"
      - name: Log in to npm
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          npm whoami
      - name: Extract branch from git ref
        run: |
          echo "::set-output name=name::${GITHUB_REF#refs/*/}"
          echo "::set-output name=version::${GITHUB_REF##*/}"
        id: extract_branch
      - name: Releaseing with lerna
        # also see some options in lerna.json
        run: yarn lerna publish ${{ steps.extract_branch.outputs.version }} --conventional-commits --create-release github --yes --no-private
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Create Pull Request
        run: >
          curl
          -X POST
          -H "Accept: application/vnd.github.v3+json"
          -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN }}"
          https://api.github.com/repos/${{ github.event.repository.owner.name }}/${{ github.event.repository.name }}/pulls
          -d '{"head":"${{ steps.extract_branch.outputs.name }}","base":"${{ github.event.repository.default_branch }}","title":"chore(release): publish"}'
